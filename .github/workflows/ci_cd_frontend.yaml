name: CI/CD frontend
on:
  push:
    branches:
      - main
    paths:
      - "04_frontend/**"
      - ".github/workflows/ci_cd_frontend.yaml"
  pull_request:
    paths:
      - "04_frontend/**"
      - ".github/workflows/ci_cd_frontend.yaml"
  workflow_dispatch:
    inputs:
      deploy:
        description: Deploy to AWS
        required: false
        type: boolean
        default: false

jobs:
  build-test-deploy:
    name: Build, Test & Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./04_frontend
    concurrency:
      group: 04_frontend-${{ github.ref }}
      cancel-in-progress: false
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'app.gitgazer.com' || null }}
      url: ${{ github.ref == 'refs/heads/main' && 'https://app.gitgazer.com/' || null }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version-file: ./04_frontend/package.json
          cache: "npm"
          cache-dependency-path: ./04_frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          VITE_HOST_URL: ${{ vars.VITE_HOST_URL }}
          VITE_COGNITO_USER_POOL_ID: ${{ vars.VITE_COGNITO_USER_POOL_ID }}
          VITE_COGNITO_USER_POOL_CLIENT_ID: ${{ vars.VITE_COGNITO_USER_POOL_CLIENT_ID }}
          VITE_COGNITO_DOMAIN: ${{ vars.VITE_COGNITO_DOMAIN }}
          VITE_IMPORT_URL_BASE: ${{ vars.VITE_IMPORT_URL_BASE }}
          VITE_REST_API_REGION: ${{ vars.REST_API_REGION }}
          VITE_REST_API_ENDPOINT: ${{ vars.VITE_REST_API_ENDPOINT }}

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main' || inputs.deploy == true
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::060102055153:role/gitgazer-deployments
          #role-session-name: gitgazer-frontend-deployment
          aws-region: eu-central-1
          #mask-aws-account-id: true

      - name: Deploy
        if: github.ref == 'refs/heads/main' || inputs.deploy == true
        run: |
          aws s3 sync dist/. s3://${{ vars.FRONTEND_S3_BUCKET_NAME }}/ --cache-control max-age=604800 --include "*" --exclude "*.html"
          aws s3 sync dist/. s3://${{ vars.FRONTEND_S3_BUCKET_NAME }}/ --cache-control max-age=60 --include "*.html"
